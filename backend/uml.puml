@startuml
skinparam linetype ortho
entity "USER" as user{
    *user_id : number<<generated>>
    --
    *first_name : varchar(30)
    *last_name : varchar(30)
    *email : varchar(50)<<unique>>
    *phone_number : char(10)<<unique>>
    *username : varchar(50)<<unique>>
    *password : varchar(255)
    *role : ROLE
}

entity "STAFF" as staff{
    *staff_id : number<<generated>>
    --
    *wages : float
    *bank_company : BANK
    *bank_account : varchar(20)<<unique>>
}

entity "CUSTOMER" as customer{
    *customer_id : number<<generated>>
}

entity "CHATLOG" as chatlog{
    *text_id : number<<generated>>
    --
    review : text
    replay : text
    rating : float
    *review_date : timestamp
    reply_date : timestamp
    --
     <<at least one of review or rating must be not null>>
     <<reply is null if review is null>>
}

entity "PET" as pet{
    *pet_id : number<<generated>>
    --
    *name : varchar(30)
    *sex : SEX
    *age : number
    *type : varchar(20)
    *pet_status : PET_STATUS
    breed : varchar(30)
    disease : varchar(30)[]
    allergic : varchar(30)[]
    *picture : BYTEA
}

entity "ROOM" as room{
    *room_id : number<<generated>>
    --
    *capacity : int
    *price : float
    *picture : BYTEA
}

entity "BOOKED_ROOM" as stay{
    *bRoom_id : number<<generated>>
    --
    *startTime : timestamp
    *endTime : timestamp
}

entity "SERVICE" as service{
    *service_id : number<<generated>>
    --
    *name : varchar(50)
    *price : float
    *picture : BYTEA
}

entity "BOOKED_SERVICE" as queue{
    *sRoom_id : number<<generated>>
    --
    *scheduled : timestamp
    *status : 
}

entity "BOOKING" as booking{
    *booking_id : number<<generated>>
    --
    *booking_date : timestamp
    *booking_status : BOOKING_STATUS
}

entity "PAYMENT" as payment{
    *payment_id : number<<generated>>
    --
    *cost : float
    *payment_date : timestamp
    *payment_status : PAYMENT_STATUS
}

class CARE << relationship>> {
    *start_period : timestamp
    *end_period : timestamp
}

user <|-- customer
user <|-- staff

customer ||--|{ pet : "own"
staff }o--|{ room : "check"
customer|o--|{ chatlog : "review"
customer ||--|{ booking : "book"
chatlog }|--o| service : "refer_to"
service }o--o{staff : "give"
customer |o--|{payment : "pay"
booking |o--o{ queue : "include"
booking |o--o{ stay : "contain"
booking ||--o{ payment : "generate"
service }o--o{ queue : "scheduled"
pet }o--o{  queue : "appoint"
stay }o--o{ pet : "stay"
stay }o--o{ room : "occupy"
staff }o--|{ chatlog : "replay"


staff }o--|{ CARE
CARE }o--|{ pet

enum "ROLE"{
    "STAFF"
    "CUSTOMER"
}

enum "SEX"{
    "MALE"
    "FEMALE"
}

enum "BANK"{
    "KASIKORN"
    "SCB"
    "KRUNGTHAI"
}

enum "BOOKING_STATUS"{
    "PENDING"
    "BOOKED"
    "CHECKED_IN"
    "CHECKED_OUT"
    "CANCELLED"
}

enum "PAYMENT_STATUS"{
    "PENDING"
    "COMPLETED"
    "FAILED"
}

enum "PET_STATUS"{
    "QUEUE"
    "IN_PROGRESS"
    "COMPLETED"
}
@enduml